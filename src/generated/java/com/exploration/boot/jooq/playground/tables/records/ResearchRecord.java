/**
 * This class is generated by jOOQ
 */
package com.exploration.boot.jooq.playground.tables.records;


import com.exploration.boot.jooq.playground.tables.Research;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ResearchRecord extends UpdatableRecordImpl<ResearchRecord> implements Record3<Long, Long, String> {

    private static final long serialVersionUID = 1620541565;

    /**
     * Setter for <code>PUBLIC.RESEARCH.ID</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.RESEARCH.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>PUBLIC.RESEARCH.SPACE_TRAVEL_ID</code>.
     */
    public void setSpaceTravelId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.RESEARCH.SPACE_TRAVEL_ID</code>.
     */
    public Long getSpaceTravelId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>PUBLIC.RESEARCH.DESCRIPTION</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.RESEARCH.DESCRIPTION</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Long, Long, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Long, Long, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Research.RESEARCH.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return Research.RESEARCH.SPACE_TRAVEL_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Research.RESEARCH.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getSpaceTravelId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResearchRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResearchRecord value2(Long value) {
        setSpaceTravelId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResearchRecord value3(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResearchRecord values(Long value1, Long value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ResearchRecord
     */
    public ResearchRecord() {
        super(Research.RESEARCH);
    }

    /**
     * Create a detached, initialised ResearchRecord
     */
    public ResearchRecord(Long id, Long spaceTravelId, String description) {
        super(Research.RESEARCH);

        set(0, id);
        set(1, spaceTravelId);
        set(2, description);
    }
}
