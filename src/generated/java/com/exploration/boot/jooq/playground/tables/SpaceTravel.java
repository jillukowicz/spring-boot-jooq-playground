/**
 * This class is generated by jOOQ
 */
package com.exploration.boot.jooq.playground.tables;


import com.exploration.boot.jooq.playground.Keys;
import com.exploration.boot.jooq.playground.Public;
import com.exploration.boot.jooq.playground.tables.records.SpaceTravelRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SpaceTravel extends TableImpl<SpaceTravelRecord> {

    private static final long serialVersionUID = -869006323;

    /**
     * The reference instance of <code>PUBLIC.SPACE_TRAVEL</code>
     */
    public static final SpaceTravel SPACE_TRAVEL = new SpaceTravel();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SpaceTravelRecord> getRecordType() {
        return SpaceTravelRecord.class;
    }

    /**
     * The column <code>PUBLIC.SPACE_TRAVEL.ID</code>.
     */
    public final TableField<SpaceTravelRecord, Long> ID = createField("ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("(NEXT VALUE FOR PUBLIC.SYSTEM_SEQUENCE_DAB0DE50_DB85_475F_845C_849B1526BB64)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>PUBLIC.SPACE_TRAVEL.DESTINATION</code>.
     */
    public final TableField<SpaceTravelRecord, String> DESTINATION = createField("DESTINATION", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.SPACE_TRAVEL.DISTANCE</code>.
     */
    public final TableField<SpaceTravelRecord, Long> DISTANCE = createField("DISTANCE", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>PUBLIC.SPACE_TRAVEL</code> table reference
     */
    public SpaceTravel() {
        this("SPACE_TRAVEL", null);
    }

    /**
     * Create an aliased <code>PUBLIC.SPACE_TRAVEL</code> table reference
     */
    public SpaceTravel(String alias) {
        this(alias, SPACE_TRAVEL);
    }

    private SpaceTravel(String alias, Table<SpaceTravelRecord> aliased) {
        this(alias, aliased, null);
    }

    private SpaceTravel(String alias, Table<SpaceTravelRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SpaceTravelRecord, Long> getIdentity() {
        return Keys.IDENTITY_SPACE_TRAVEL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SpaceTravelRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_F;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SpaceTravelRecord>> getKeys() {
        return Arrays.<UniqueKey<SpaceTravelRecord>>asList(Keys.CONSTRAINT_F);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpaceTravel as(String alias) {
        return new SpaceTravel(alias, this);
    }

    /**
     * Rename this table
     */
    public SpaceTravel rename(String name) {
        return new SpaceTravel(name, null);
    }
}
